{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","handlePageChange","page","renderPageLink","_jsx","className","concat","children","href","onClick","e","preventDefault","_jsxs","Array","from","length","_","index","map","App","setCurrentPage","useState","setPerPage","startItem","endItem","totalItems","min","calculateItems","items","to","numbers","n","push","getNumbers","id","value","onChange","parseInt","target","handlePerPageChange","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f898ea50.chunk.js","sourcesContent":["import React from 'react';\n\ninterface PaginationProps {\n  total: number;\n  perPage: number;\n  currentPage?: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const handlePageChange = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const renderPageLink = (page: number) => (\n    <li\n      key={page}\n      className={`page-item ${page === currentPage ? 'active' : ''}`}\n    >\n      <a\n        data-cy=\"pageLink\"\n        className=\"page-link\"\n        href={`#${page}`}\n        onClick={e => {\n          e.preventDefault();\n          handlePageChange(page);\n        }}\n      >\n        {page}\n      </a>\n    </li>\n  );\n\n  const renderPageLinks = () =>\n    Array.from({ length: totalPages }, (_, index) => index + 1).map(\n      renderPageLink,\n    );\n\n  const handlePrevClick = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    if (currentPage !== 1) {\n      handlePageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextClick = (e: React.MouseEvent<HTMLAnchorElement>) => {\n    e.preventDefault();\n    if (currentPage !== totalPages) {\n      handlePageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      {/* Previous Page Link */}\n      <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={handlePrevClick}\n        >\n          «\n        </a>\n      </li>\n\n      {/* Page Links */}\n      {renderPageLinks()}\n\n      {/* Next Page Link */}\n      <li\n        className={`page-item ${currentPage === totalPages ? 'disabled' : ''}`}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages ? 'true' : 'false'}\n          onClick={handleNextClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport {\n  getNumbers,\n  calculateItems,\n  handlePageChange,\n  handlePerPageChange,\n} from './utils';\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const totalItems = 42; // Total number of items\n\n  const [startItem, endItem] = calculateItems(currentPage, perPage, totalItems);\n  const items = getNumbers(startItem, endItem).map(n => `Item ${n}`);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page {currentPage} (items {startItem} - {endItem} of {totalItems})\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={e => handlePerPageChange(e, setPerPage, setCurrentPage)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={page => handlePageChange(page, setCurrentPage)}\n      />\n\n      <ul>\n        {items.map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport function handlePageChange(\n  page: number,\n  setCurrentPage: (page: number) => void,\n) {\n  setCurrentPage(page);\n}\n\nexport function calculateItems(\n  currentPage: number,\n  perPage: number,\n  totalItems: number,\n): [number, number] {\n  const startItem = (currentPage - 1) * perPage + 1;\n  const endItem = Math.min(currentPage * perPage, totalItems);\n\n  return [startItem, endItem];\n}\n\nexport function handlePerPageChange(\n  e: React.ChangeEvent<HTMLSelectElement>,\n  setPerPage: (perPage: number) => void,\n  setCurrentPage: (page: number) => void,\n) {\n  const newPerPage = parseInt(e.target.value, 10);\n\n  setPerPage(newPerPage);\n  setCurrentPage(1);\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}