{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","handlePageChange","page","_jsxs","className","children","_jsx","concat","href","onClick","e","preventDefault","Array","from","length","_","index","map","App","setCurrentPage","useState","setPerPage","items","to","numbers","n","push","getNumbers","min","id","value","onChange","parseInt","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"uKASO,MAAMA,EAAwCC,IAK9C,IAL+C,MACpDC,EAAK,QACLC,EAAO,YACPC,EAAc,EAAC,aACfC,GACDJ,EACC,MAAMK,EAAaC,KAAKC,KAAKN,EAAQC,GAE/BM,EAAoBC,IACpBA,IAASN,GACXC,EAAaK,IAuBjB,OACEC,eAAA,MAAIC,UAAU,aAAYC,SAAA,CAExBC,cAAA,MAAIF,UAAS,aAAAG,OAA+B,IAAhBX,EAAoB,WAAa,IAAKS,SAChEC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVI,KAAK,QACL,gBAA+B,IAAhBZ,EAAoB,OAAS,QAC5Ca,QAASC,IACPA,EAAEC,iBACkB,IAAhBf,GACFK,EAAiBL,EAAc,IAEjCS,SACH,WAMFO,MAAMC,KAAK,CAAEC,OAAQhB,IAAc,CAACiB,EAAGC,IAAUA,EAAQ,IAAGC,KAxCzCf,GACtBI,cAAA,MAEEF,UAAS,aAAAG,OAAeL,IAASN,EAAc,SAAW,IAAKS,SAE/DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVI,KAAI,IAAAD,OAAML,GACVO,QAASC,IACPA,EAAEC,iBACFV,EAAiBC,IACjBG,SAEDH,KAZEA,KA2CLI,cAAA,MACEF,UAAS,aAAAG,OAAeX,IAAgBE,EAAa,WAAa,IAAKO,SAEvEC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVI,KAAK,QACL,gBAAeZ,IAAgBE,EAAa,OAAS,QACrDW,QAASC,IACPA,EAAEC,iBACEf,IAAgBE,GAClBG,EAAiBL,EAAc,IAEjCS,SACH,eC5EF,MAAMa,EAAgBA,KAC3B,MAAOtB,EAAauB,GAAkBC,mBAAS,IACxCzB,EAAS0B,GAAcD,mBAAS,GAIjCE,ECZD,SAAoBT,EAAcU,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIZ,EAAMY,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDKOG,EACX/B,EAAc,GAAKD,EAAU,EAC9BI,KAAK6B,IAAIhC,EAAcD,EALN,KAMjBsB,KAAIQ,GAAC,QAAAlB,OAAYkB,KAWnB,OACEtB,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJF,eAAA,KAAGC,UAAU,OAAO,UAAQ,OAAMC,SAAA,CAAC,QAC3BT,EAAY,YAAUA,EAAc,GAAKD,EAAU,EAAE,KAAG,IAC7DI,KAAK6B,IAAIhC,EAAcD,EAvBX,IAuBgC,OAvBhC,GAuBgD,OAG/DQ,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACE,UAAQ,kBACR0B,GAAG,kBACHzB,UAAU,eACV0B,MAAOnC,EACPoC,SArBmBrB,IAC3BW,EAAWW,SAAStB,EAAEuB,OAAOH,MAAO,KACpCX,EAAe,IAmBuBd,SAAA,CAE9BC,cAAA,UAAQwB,MAAM,IAAGzB,SAAC,MAClBC,cAAA,UAAQwB,MAAM,IAAGzB,SAAC,MAClBC,cAAA,UAAQwB,MAAM,KAAIzB,SAAC,OACnBC,cAAA,UAAQwB,MAAM,KAAIzB,SAAC,YAIvBC,cAAA,SAAO4B,QAAQ,kBAAkB9B,UAAU,qBAAoBC,SAAC,sBAMlEC,cAACd,EAAU,CACTE,MAjDa,GAkDbC,QAASA,EACTC,YAAaA,EACbC,aA5CoBK,IACxBiB,EAAejB,MA8CbI,cAAA,MAAAD,SACGiB,EAAML,KAAIkB,GACT7B,cAAA,MAAe,UAAQ,OAAMD,SAC1B8B,GADMA,WE/DnBC,IAASC,OAAO/B,cAACY,EAAG,IAAKoB,SAASC,eAAe,U","file":"static/js/main.eb91dd3d.chunk.js","sourcesContent":["import React from 'react';\n\ninterface PaginationProps {\n  total: number;\n  perPage: number;\n  currentPage?: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n\n  const handlePageChange = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const renderPageLink = (page: number) => (\n    <li\n      key={page}\n      className={`page-item ${page === currentPage ? 'active' : ''}`}\n    >\n      <a\n        data-cy=\"pageLink\"\n        className=\"page-link\"\n        href={`#${page}`}\n        onClick={e => {\n          e.preventDefault();\n          handlePageChange(page);\n        }}\n      >\n        {page}\n      </a>\n    </li>\n  );\n\n  return (\n    <ul className=\"pagination\">\n      {/* Previous Page Link */}\n      <li className={`page-item ${currentPage === 1 ? 'disabled' : ''}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={e => {\n            e.preventDefault();\n            if (currentPage !== 1) {\n              handlePageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {/* Page Links */}\n      {Array.from({ length: totalPages }, (_, index) => index + 1).map(\n        renderPageLink,\n      )}\n\n      {/* Next Page Link */}\n      <li\n        className={`page-item ${currentPage === totalPages ? 'disabled' : ''}`}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPages ? 'true' : 'false'}\n          onClick={e => {\n            e.preventDefault();\n            if (currentPage !== totalPages) {\n              handlePageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n  const totalItems = 42; // Total number of items\n  // const totalPages = Math.ceil(totalItems / perPage);\n\n  const items = getNumbers(\n    (currentPage - 1) * perPage + 1,\n    Math.min(currentPage * perPage, totalItems),\n  ).map(n => `Item ${n}`);\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const handlePerPageChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(parseInt(e.target.value, 10));\n    setCurrentPage(1);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page {currentPage} (items {(currentPage - 1) * perPage + 1} -{' '}\n        {Math.min(currentPage * perPage, totalItems)} of {totalItems})\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Use the Pagination component */}\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {items.map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}